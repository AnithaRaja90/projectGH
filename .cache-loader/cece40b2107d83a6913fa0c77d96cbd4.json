{"remainingRequest":"/var/www/PGH/aug/projectGH/node_modules/thread-loader/dist/cjs.js??ref--10-2!/var/www/PGH/aug/projectGH/node_modules/ts-loader/index.js??ref--10-3!/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js!/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js!/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/shade-area/shade-area-update.component.ts","dependencies":[{"path":"/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/shade-area/shade-area-update.component.ts","mtime":1534596560490},{"path":"/var/www/PGH/aug/projectGH/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/var/www/PGH/aug/projectGH/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/var/www/PGH/aug/projectGH/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/var/www/PGH/aug/projectGH/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar moment = require(\"moment\");\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar shade_area_service_1 = require(\"./shade-area.service\");\nvar batch_1 = require(\"app/entities/batch\");\nvar ShadeAreaUpdateComponent = /** @class */ (function () {\n    function ShadeAreaUpdateComponent(jhiAlertService, shadeAreaService, batchService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.shadeAreaService = shadeAreaService;\n        this.batchService = batchService;\n        this.activatedRoute = activatedRoute;\n    }\n    ShadeAreaUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var shadeArea = _a.shadeArea;\n            _this.shadeArea = shadeArea;\n        });\n        this.batchService.query().subscribe(function (res) {\n            _this.batches = res.body;\n        }, function (res) { return _this.onError(res.message); });\n    };\n    ShadeAreaUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    ShadeAreaUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        this.shadeArea.createdAt = moment(this.createdAt, input_constants_1.DATE_TIME_FORMAT);\n        this.shadeArea.updatedAt = moment(this.updatedAt, input_constants_1.DATE_TIME_FORMAT);\n        if (this.shadeArea.id !== undefined) {\n            this.subscribeToSaveResponse(this.shadeAreaService.update(this.shadeArea));\n        }\n        else {\n            this.subscribeToSaveResponse(this.shadeAreaService.create(this.shadeArea));\n        }\n    };\n    ShadeAreaUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    ShadeAreaUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    ShadeAreaUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    ShadeAreaUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    ShadeAreaUpdateComponent.prototype.trackBatchById = function (index, item) {\n        return item.id;\n    };\n    Object.defineProperty(ShadeAreaUpdateComponent.prototype, \"shadeArea\", {\n        get: function () {\n            return this._shadeArea;\n        },\n        set: function (shadeArea) {\n            this._shadeArea = shadeArea;\n            this.createdAt = moment(shadeArea.createdAt).format(input_constants_1.DATE_TIME_FORMAT);\n            this.updatedAt = moment(shadeArea.updatedAt).format(input_constants_1.DATE_TIME_FORMAT);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadeAreaUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-shade-area-update',\n            templateUrl: './shade-area-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _a || Object, typeof (_b = typeof shade_area_service_1.ShadeAreaService !== \"undefined\" && shade_area_service_1.ShadeAreaService) === \"function\" && _b || Object, typeof (_c = typeof batch_1.BatchService !== \"undefined\" && batch_1.BatchService) === \"function\" && _c || Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _d || Object])\n    ], ShadeAreaUpdateComponent);\n    return ShadeAreaUpdateComponent;\n    var _a, _b, _c, _d;\n}());\nexports.ShadeAreaUpdateComponent = ShadeAreaUpdateComponent;\n",{"version":3,"file":"/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/shade-area/shade-area-update.component.ts","sourceRoot":"","sources":["/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js!/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js!/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/shade-area/shade-area-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { IShadeArea } from 'app/shared/model/shade-area.model';\nimport { ShadeAreaService } from './shade-area.service';\nimport { IBatch } from 'app/shared/model/batch.model';\nimport { BatchService } from 'app/entities/batch';\n\n@Component({\n    selector: 'jhi-shade-area-update',\n    templateUrl: './shade-area-update.component.html'\n})\nexport class ShadeAreaUpdateComponent implements OnInit {\n    private _shadeArea: IShadeArea;\n    isSaving: boolean;\n\n    batches: IBatch[];\n    dateDp: any;\n    createdAt: string;\n    updatedAt: string;\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private shadeAreaService: ShadeAreaService,\n        private batchService: BatchService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ shadeArea }) => {\n            this.shadeArea = shadeArea;\n        });\n        this.batchService.query().subscribe(\n            (res: HttpResponse<IBatch[]>) => {\n                this.batches = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        this.shadeArea.createdAt = moment(this.createdAt, DATE_TIME_FORMAT);\n        this.shadeArea.updatedAt = moment(this.updatedAt, DATE_TIME_FORMAT);\n        if (this.shadeArea.id !== undefined) {\n            this.subscribeToSaveResponse(this.shadeAreaService.update(this.shadeArea));\n        } else {\n            this.subscribeToSaveResponse(this.shadeAreaService.create(this.shadeArea));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IShadeArea>>) {\n        result.subscribe((res: HttpResponse<IShadeArea>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackBatchById(index: number, item: IBatch) {\n        return item.id;\n    }\n    get shadeArea() {\n        return this._shadeArea;\n    }\n\n    set shadeArea(shadeArea: IShadeArea) {\n        this._shadeArea = shadeArea;\n        this.createdAt = moment(shadeArea.createdAt).format(DATE_TIME_FORMAT);\n        this.updatedAt = moment(shadeArea.updatedAt).format(DATE_TIME_FORMAT);\n    }\n}\n"]}]}