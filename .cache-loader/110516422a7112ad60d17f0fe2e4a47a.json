{"remainingRequest":"/var/www/PGH/aug/projectGH/node_modules/thread-loader/dist/cjs.js??ref--10-2!/var/www/PGH/aug/projectGH/node_modules/ts-loader/index.js??ref--10-3!/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js!/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js!/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/configuration/zonal.component.ts","dependencies":[{"path":"/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/configuration/zonal.component.ts","mtime":1534603199678},{"path":"/var/www/PGH/aug/projectGH/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/var/www/PGH/aug/projectGH/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/var/www/PGH/aug/projectGH/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/var/www/PGH/aug/projectGH/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n// Import needed component and dependency\nvar core_1 = require(\"@angular/core\");\nvar zonal_service_1 = require(\"app/entities/service/zonal.service\");\nvar zonal_model_1 = require(\"app/shared/model/zonal.model\");\nvar modal_1 = require(\"ngx-bootstrap/modal\");\nvar core_2 = require(\"@angular/core\");\nvar moment = require(\"moment\");\nvar shared_1 = require(\"app/shared\");\n// Mension the html, css/sass files\nvar ZonalComponent = /** @class */ (function () {\n    function ZonalComponent(zonalService) {\n        this.zonalService = zonalService;\n        // Create object for model\n        this.zonalObject = new zonal_model_1.ZonalModel();\n    }\n    ZonalComponent.prototype.ngOnInit = function () {\n        // Call a function to get list of zonals\n        this.getZoneList();\n    };\n    // Call a service function to get list of zonals\n    ZonalComponent.prototype.getZoneList = function () {\n        var _this = this;\n        // Get the list of zone\n        this.zonalService.query().subscribe(function (res) {\n            _this.zonals = res.body;\n        });\n    };\n    // Send a zonal object to a service (create or update)\n    ZonalComponent.prototype.save = function () {\n        this.zonalObject.updatedAt = moment(this.updatedAt, shared_1.DATE_TIME_FORMAT);\n        if (this.zonalObject.id !== undefined) {\n            this.subscribeToSaveResponse(this.zonalService.update(this.zonalObject));\n        }\n        else {\n            this.zonalObject.createdAt = moment(this.createdAt, shared_1.DATE_TIME_FORMAT);\n            this.subscribeToSaveResponse(this.zonalService.create(this.zonalObject));\n        }\n    };\n    ZonalComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) {\n            _this.zoneModal.hide();\n            _this.zonalObject = new zonal_model_1.ZonalModel();\n            alert('Zone Created/Updated Successfully.');\n            _this.getZoneList();\n        }, function (res) {\n            alert(res.error.fieldErrors[0].message);\n        });\n    };\n    // show model popup to create zonal value\n    ZonalComponent.prototype.createZone = function () {\n        this.zonalObject = new zonal_model_1.ZonalModel();\n        this.zoneModal.show();\n    };\n    // show model popup to update zonal value\n    ZonalComponent.prototype.getZoneValue = function (value) {\n        this.zoneModal.show();\n        this.zonalObject = value;\n    };\n    // delete zonal value\n    ZonalComponent.prototype.deleteZonal = function (zonal) {\n        var _this = this;\n        this.zonalService.delete(zonal.id).subscribe(function (data) {\n            alert('Zone deleted Successfully.');\n            _this.zonals = _this.zonals.filter(function (u) { return u !== zonal; });\n        });\n    };\n    Object.defineProperty(ZonalComponent.prototype, \"zonal\", {\n        // Set a current time to a variable\n        set: function (zonalObject) {\n            this.createdAt = moment(this.zonalObject.createdAt).format(shared_1.DATE_TIME_FORMAT);\n            this.updatedAt = moment(this.zonalObject.updatedAt).format(shared_1.DATE_TIME_FORMAT);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        core_2.ViewChild('zoneModal'),\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof modal_1.ModalDirective !== \"undefined\" && modal_1.ModalDirective) === \"function\" && _a || Object)\n    ], ZonalComponent.prototype, \"zoneModal\", void 0);\n    ZonalComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-zonal',\n            templateUrl: 'zonal.component.html'\n        })\n        /**\n         * Class ZonalComponent used to create/update a zonal, List all zonals.\n         * Declared an Zonal object to create and update.\n         * Declared an Array variable to set list of zonals.\n         * Using a modal popup directive create and update form is displayed.\n         */\n        ,\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof zonal_service_1.ZonalService !== \"undefined\" && zonal_service_1.ZonalService) === \"function\" && _b || Object])\n    ], ZonalComponent);\n    return ZonalComponent;\n    var _a, _b;\n}());\nexports.ZonalComponent = ZonalComponent;\n",{"version":3,"file":"/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/configuration/zonal.component.ts","sourceRoot":"","sources":["/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js!/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js!/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/configuration/zonal.component.ts"],"names":[],"mappings":"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","sourcesContent":["// Import needed component and dependency\nimport { Component, OnInit } from '@angular/core';\nimport { ZonalService } from 'app/entities/service/zonal.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { IZonal, ZonalModel } from 'app/shared/model/zonal.model';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ViewChild } from '@angular/core';\n\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// Mension the html, css/sass files\n@Component({\n    selector: 'jhi-zonal',\n    templateUrl: 'zonal.component.html'\n})\n\n/**\n * Class ZonalComponent used to create/update a zonal, List all zonals.\n * Declared an Zonal object to create and update.\n * Declared an Array variable to set list of zonals.\n * Using a modal popup directive create and update form is displayed.\n */\nexport class ZonalComponent implements OnInit {\n    // Create object for model\n    zonalObject: ZonalModel = new ZonalModel();\n    // create empty array for each service\n    zonals: IZonal[];\n    createdAt: string;\n    updatedAt: string;\n    // Declare a modal popup\n    @ViewChild('zoneModal') public zoneModal: ModalDirective;\n\n    constructor(private zonalService: ZonalService) {}\n\n    ngOnInit() {\n        // Call a function to get list of zonals\n        this.getZoneList();\n    }\n\n    // Call a service function to get list of zonals\n    getZoneList(): void {\n        // Get the list of zone\n        this.zonalService.query().subscribe((res: HttpResponse<IZonal[]>) => {\n            this.zonals = res.body;\n        });\n    }\n\n    // Send a zonal object to a service (create or update)\n    save() {\n        this.zonalObject.updatedAt = moment(this.updatedAt, DATE_TIME_FORMAT);\n        if (this.zonalObject.id !== undefined) {\n            this.subscribeToSaveResponse(this.zonalService.update(this.zonalObject));\n        } else {\n            this.zonalObject.createdAt = moment(this.createdAt, DATE_TIME_FORMAT);\n            this.subscribeToSaveResponse(this.zonalService.create(this.zonalObject));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IZonal>>) {\n        result.subscribe(\n            (res: HttpResponse<IZonal>) => {\n                this.zoneModal.hide();\n                this.zonalObject = new ZonalModel();\n                alert('Zone Created/Updated Successfully.');\n                this.getZoneList();\n            },\n            (res: HttpErrorResponse) => {\n                alert(res.error.fieldErrors[0].message);\n            }\n        );\n    }\n\n    // show model popup to create zonal value\n    createZone(): void {\n        this.zonalObject = new ZonalModel();\n        this.zoneModal.show();\n    }\n\n    // show model popup to update zonal value\n    getZoneValue(value: ZonalModel): void {\n        this.zoneModal.show();\n        this.zonalObject = value;\n    }\n\n    // delete zonal value\n    deleteZonal(zonal: ZonalModel): void {\n        this.zonalService.delete(zonal.id).subscribe(data => {\n            alert('Zone deleted Successfully.');\n            this.zonals = this.zonals.filter(u => u !== zonal);\n        });\n    }\n\n    // Set a current time to a variable\n    set zonal(zonalObject: ZonalModel) {\n        this.createdAt = moment(this.zonalObject.createdAt).format(DATE_TIME_FORMAT);\n        this.updatedAt = moment(this.zonalObject.updatedAt).format(DATE_TIME_FORMAT);\n    }\n}\n"]}]}