{"remainingRequest":"/var/www/PGH/aug/projectGH/node_modules/thread-loader/dist/cjs.js??ref--10-2!/var/www/PGH/aug/projectGH/node_modules/ts-loader/index.js??ref--10-3!/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js!/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js!/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/godown-management/godown.component.ts","dependencies":[{"path":"/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/godown-management/godown.component.ts","mtime":1534603156574},{"path":"/var/www/PGH/aug/projectGH/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/var/www/PGH/aug/projectGH/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/var/www/PGH/aug/projectGH/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/var/www/PGH/aug/projectGH/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n// Import needed component and dependency\nvar core_1 = require(\"@angular/core\");\nvar godown_service_1 = require(\"app/entities/service/godown.service\");\nvar godown_model_1 = require(\"app/shared/model/godown.model\");\nvar modal_1 = require(\"ngx-bootstrap/modal\");\nvar core_2 = require(\"@angular/core\");\nvar moment = require(\"moment\");\nvar shared_1 = require(\"app/shared\");\n// Mension the html, css/sass files\nvar GodownComponent = /** @class */ (function () {\n    function GodownComponent(godownService) {\n        this.godownService = godownService;\n        // Create object for model\n        this.godownObject = new godown_model_1.GodownModel();\n    }\n    GodownComponent.prototype.ngOnInit = function () {\n        // Call a function to get list of godowns\n        this.getGodownList();\n    };\n    // Call a service function to get list of godowns\n    GodownComponent.prototype.getGodownList = function () {\n        var _this = this;\n        // Get the list of godown\n        this.godownService.query().subscribe(function (res) {\n            _this.godowns = res.body;\n        });\n    };\n    // Send a godown object to a service (create or update)\n    GodownComponent.prototype.save = function () {\n        this.godownObject.updatedAt = moment(this.updatedAt, shared_1.DATE_TIME_FORMAT);\n        if (this.godownObject.id !== undefined) {\n            this.subscribeToSaveResponse(this.godownService.update(this.godownObject));\n        }\n        else {\n            this.godownObject.createdAt = moment(this.createdAt, shared_1.DATE_TIME_FORMAT);\n            this.subscribeToSaveResponse(this.godownService.create(this.godownObject));\n        }\n    };\n    GodownComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) {\n            _this.godownModal.hide();\n            _this.godownObject = new godown_model_1.GodownModel();\n            alert('Godown Created/Updated Successfully.');\n            _this.getGodownList();\n        }, function (res) {\n            alert(res.error.fieldErrors[0].message);\n        });\n    };\n    // show model popup to create godown value\n    GodownComponent.prototype.createGodown = function () {\n        this.godownObject = new godown_model_1.GodownModel();\n        this.godownModal.show();\n    };\n    // show model popup to update godown value\n    GodownComponent.prototype.getGodownValue = function (value) {\n        this.godownModal.show();\n        this.godownObject = value;\n    };\n    // delete godown value\n    GodownComponent.prototype.deleteGodown = function (godown) {\n        var _this = this;\n        this.godownService.delete(godown.id).subscribe(function (data) {\n            alert('Godown deleted Successfully.');\n            _this.godowns = _this.godowns.filter(function (u) { return u !== godown; });\n        });\n    };\n    Object.defineProperty(GodownComponent.prototype, \"godown\", {\n        // Set a current time to a variable\n        set: function (godownObject) {\n            this.createdAt = moment(this.godownObject.createdAt).format(shared_1.DATE_TIME_FORMAT);\n            this.updatedAt = moment(this.godownObject.updatedAt).format(shared_1.DATE_TIME_FORMAT);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        core_2.ViewChild('godownModal'),\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof modal_1.ModalDirective !== \"undefined\" && modal_1.ModalDirective) === \"function\" && _a || Object)\n    ], GodownComponent.prototype, \"godownModal\", void 0);\n    GodownComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-godown',\n            templateUrl: 'godown.component.html'\n        })\n        /**\n         * Class GodownComponent used to create/update a godown, List all godowns.\n         * Declared an Godown object to create and update.\n         * Declared an Array variable to set list of godowns.\n         * Using a modal popup directive create and update form is displayed.\n         */\n        ,\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof godown_service_1.GodownService !== \"undefined\" && godown_service_1.GodownService) === \"function\" && _b || Object])\n    ], GodownComponent);\n    return GodownComponent;\n    var _a, _b;\n}());\nexports.GodownComponent = GodownComponent;\n",{"version":3,"file":"/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/godown-management/godown.component.ts","sourceRoot":"","sources":["/var/www/PGH/aug/projectGH/node_modules/angular-router-loader/src/index.js!/var/www/PGH/aug/projectGH/node_modules/tslint-loader/index.js!/var/www/PGH/aug/projectGH/src/main/webapp/app/entities/godown-management/godown.component.ts"],"names":[],"mappings":"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","sourcesContent":["// Import needed component and dependency\nimport { Component, OnInit } from '@angular/core';\nimport { GodownService } from 'app/entities/service/godown.service';\nimport { IGodown, GodownModel } from 'app/shared/model/godown.model';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ViewChild } from '@angular/core';\n\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// Mension the html, css/sass files\n@Component({\n    selector: 'jhi-godown',\n    templateUrl: 'godown.component.html'\n})\n\n/**\n * Class GodownComponent used to create/update a godown, List all godowns.\n * Declared an Godown object to create and update.\n * Declared an Array variable to set list of godowns.\n * Using a modal popup directive create and update form is displayed.\n */\nexport class GodownComponent implements OnInit {\n    // Create object for model\n    godownObject: GodownModel = new GodownModel();\n    // create empty array for each service\n    godowns: IGodown[];\n    createdAt: string;\n    updatedAt: string;\n    // Declare a modal popup\n    @ViewChild('godownModal') public godownModal: ModalDirective;\n\n    constructor(private godownService: GodownService) {}\n\n    ngOnInit() {\n        // Call a function to get list of godowns\n        this.getGodownList();\n    }\n\n    // Call a service function to get list of godowns\n    getGodownList(): void {\n        // Get the list of godown\n        this.godownService.query().subscribe((res: HttpResponse<IGodown[]>) => {\n            this.godowns = res.body;\n        });\n    }\n\n    // Send a godown object to a service (create or update)\n    save() {\n        this.godownObject.updatedAt = moment(this.updatedAt, DATE_TIME_FORMAT);\n        if (this.godownObject.id !== undefined) {\n            this.subscribeToSaveResponse(this.godownService.update(this.godownObject));\n        } else {\n            this.godownObject.createdAt = moment(this.createdAt, DATE_TIME_FORMAT);\n            this.subscribeToSaveResponse(this.godownService.create(this.godownObject));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IGodown>>) {\n        result.subscribe(\n            (res: HttpResponse<IGodown>) => {\n                this.godownModal.hide();\n                this.godownObject = new GodownModel();\n                alert('Godown Created/Updated Successfully.');\n                this.getGodownList();\n            },\n            (res: HttpErrorResponse) => {\n                alert(res.error.fieldErrors[0].message);\n            }\n        );\n    }\n\n    // show model popup to create godown value\n    createGodown(): void {\n        this.godownObject = new GodownModel();\n        this.godownModal.show();\n    }\n\n    // show model popup to update godown value\n    getGodownValue(value: GodownModel): void {\n        this.godownModal.show();\n        this.godownObject = value;\n    }\n\n    // delete godown value\n    deleteGodown(godown: GodownModel): void {\n        this.godownService.delete(godown.id).subscribe(data => {\n            alert('Godown deleted Successfully.');\n            this.godowns = this.godowns.filter(u => u !== godown);\n        });\n    }\n\n    // Set a current time to a variable\n    set godown(godownObject: GodownModel) {\n        this.createdAt = moment(this.godownObject.createdAt).format(DATE_TIME_FORMAT);\n        this.updatedAt = moment(this.godownObject.updatedAt).format(DATE_TIME_FORMAT);\n    }\n}\n"]}]}